version: "3.9"

services:
  broker:
    image: apache/kafka:latest
    container_name: broker
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: orders_service
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: orders
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data/pgdata
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U orders_service -d orders" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true

  flyway:
    image: flyway/flyway:9-alpine
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./flyway/conf:/flyway/conf
      - ./flyway/migrations:/flyway/sql
    command: migrate
    environment:
      FLYWAY_URL: jdbc:postgresql://postgres:5432/orders
      FLYWAY_USER: orders_service
      FLYWAY_PASSWORD: postgres
      FLYWAY_BASELINE_ON_MIGRATE: "true"

volumes:
  pgdata:
